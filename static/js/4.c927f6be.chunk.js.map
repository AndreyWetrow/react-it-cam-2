{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","active","src","avatar","alt","to","name","Message","message","maxLength100","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","addMessage","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","isAuth","dialogsElements","dialogs","map","item","messagesElements","messages","dialogsItems","messagesContainer","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,kBAAoB,mCAAmC,SAAW,0BAA0B,QAAU,yBAAyB,WAAa,8B,sGCajSC,EAVI,SAACC,GAClB,IAAMC,EAAI,mBAAeD,EAAME,IAC/B,OACE,sBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,OAA/C,UACE,qBAAKC,IAAKP,EAAMQ,OAAQC,IAAI,KAC5B,cAAC,IAAD,CAASC,GAAIT,EAAb,SAAoBD,EAAMW,WCFjBC,EAJC,SAACZ,GACf,OAAO,qBAAKG,UAAWC,IAAQS,QAAxB,SAAkCb,EAAMa,W,yCCI3CC,EAAeC,YAAiB,KAmBvBC,cAAU,CAAEC,KAAM,yBAAlBD,EAjBM,SAAChB,GACpB,OACE,sBAAMkB,SAAUlB,EAAMmB,aAAtB,SACE,sBAAKhB,UAAWC,IAAQgB,WAAxB,UACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAM,iBACNe,YAAa,uBAGf,kDCsDOC,G,MAnEC,SAAC3B,GACf,IAAI4B,EAAQ5B,EAAM6B,YAclB,IAAK7B,EAAM8B,OACT,OAAO,cAAC,IAAD,CAAUpB,GAAI,WAGvB,IAAIqB,EAAkBH,EAAMI,QAAQC,KAAI,SAACC,GAAD,OACtC,cAAC,EAAD,CACEvB,KAAMuB,EAAKvB,KACXT,GAAIgC,EAAKhC,GAETM,OAAQ0B,EAAK1B,QADR0B,EAAKhC,OAKViC,EAAmBP,EAAMQ,SAASH,KAAI,SAACC,GAAD,OACxC,cAAC,EAAD,CAASrB,QAASqB,EAAKrB,QAASX,GAAIgC,EAAKhC,IAASgC,EAAKhC,OAGzD,OACE,qCACE,sBAAKC,UAAWC,IAAQ4B,QAAxB,UACE,qBAAK7B,UAAWC,IAAQiC,aAAxB,SAAuCN,IACvC,qBAAK5B,UAAWC,IAAQkC,kBAAxB,SACE,qBAAKnC,UAAWC,IAAQgC,SAAxB,SAAmCD,SAGvC,cAAC,EAAD,CAAgBjB,SA7BE,SAACqB,GACrBvC,EAAMwC,YAAYD,EAAOE,wB,+CChBvBC,EAA6B,SAACd,GAClC,MAAO,CACLE,OAAQF,EAAMe,KAAKb,S,OC2BRc,sBACbC,aA5BsB,SAACjB,GACvB,MAAO,CAAEC,YAAaD,EAAMC,gBAEH,SAACiB,GAC1B,MAAO,CAKLN,YAAa,SAACC,GACZK,EAASC,YAAmBN,UDNF,SAACO,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAKlD,MAAM8B,OAGT,cAACkB,EAAD,eAAeE,KAAKlD,QAFlB,cAAC,IAAD,CAAUU,GAAI,eAJkB,GACbyC,IAAMH,WAStC,OAAOH,YAAQH,EAARG,CAAoCI,KCa9BL,CAGbjB","file":"static/js/4.c927f6be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__k3-Oa\",\"dialogsItems\":\"Dialogs_dialogsItems__256UG\",\"active\":\"Dialogs_active__30YiF\",\"dialog\":\"Dialogs_dialog__3cmXn\",\"messagesContainer\":\"Dialogs_messagesContainer__3X6Np\",\"messages\":\"Dialogs_messages__IBtJc\",\"message\":\"Dialogs_message__2Azfb\",\"addMessage\":\"Dialogs_addMessage__36m7m\"};","import React from \"react\";\nimport classes from \"./../Dialogs.module.scss\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n  const path = `/dialogs/${props.id}`;\n  return (\n    <div className={classes.dialog + \" \" + classes.active}>\n      <img src={props.avatar} alt=\"\" />\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","import React from \"react\";\nimport classes from \"./../Dialogs.module.scss\";\n\nconst Message = (props) => {\n  return <div className={classes.message}>{props.message}</div>;\n};\n\nexport default Message;\n","import {\n  maxLengthCreator,\n  required,\n} from \"../../../utils/validators/validarors\";\nimport classes from \"../Dialogs.module.scss\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../../common/FormsControls/FormsConrtols\";\n\nconst maxLength100 = maxLengthCreator(100);\n\nlet AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div className={classes.addMessage}>\n        <Field\n          component={Textarea}\n          validate={[required, maxLength100]}\n          name={\"newMessageBody\"}\n          placeholder={\"Enter your message\"}\n        />\n\n        <button>Send</button>\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({ form: \"dialogsAddMessageForm\" })(AddMessageForm);\n","import React, { Suspense } from \"react\";\nimport classes from \"./Dialogs.module.scss\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Redirect } from \"react-router-dom\";\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\nimport Preloader from \"../common/preloader/Preloader\";\n\nconst Dialogs = (props) => {\n  let state = props.dialogsPage;\n\n  // const onSendMessageClick = () => {\n  //   props.sendMessage();\n  // };\n  //\n  // const onNewMessageChange = (e) => {\n  //   let body = e.target.value;\n  //   props.updateNewMessageBody(body);\n  // };\n  const addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody);\n  };\n\n  if (!props.isAuth) {\n    return <Redirect to={\"/login\"} />;\n  }\n\n  let dialogsElements = state.dialogs.map((item) => (\n    <DialogItem\n      name={item.name}\n      id={item.id}\n      key={item.id}\n      avatar={item.avatar}\n    />\n  ));\n\n  let messagesElements = state.messages.map((item) => (\n    <Message message={item.message} id={item.id} key={item.id} />\n  ));\n\n  return (\n    <>\n      <div className={classes.dialogs}>\n        <div className={classes.dialogsItems}>{dialogsElements}</div>\n        <div className={classes.messagesContainer}>\n          <div className={classes.messages}>{messagesElements}</div>\n        </div>\n      </div>\n      <AddMessageForm onSubmit={addNewMessage} />\n    </>\n  );\n};\n\n// const maxLength100 = maxLengthCreator(100);\n//\n// const AddMessageForm = (props) => {\n//   return (\n//     <form onSubmit={props.handleSubmit}>\n//       <div className={classes.addMessage}>\n//         <Field\n//           component={Textarea}\n//           validate={[required, maxLength100]}\n//           name={\"newMessageBody\"}\n//           placeholder={\"Enter your message\"}\n//         />\n//\n//         <button>Send</button>\n//       </div>\n//     </form>\n//   );\n// };\n//\n// const AddMessageFormRedux = reduxForm({ form: \"dialogsAddMessageForm\" })(\n//   AddMessageForm\n// );\nexport default Dialogs;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToPropsForRedirect = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n  };\n};\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) {\n        return <Redirect to={\"/login\"} />;\n      }\n      return <Component {...this.props} />;\n    }\n  }\n\n  return connect(mapStateToPropsForRedirect)(RedirectComponent);\n};\n","import { sendMessageCreator } from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nconst mapStateToProps = (state) => {\n  return { dialogsPage: state.dialogsPage };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // updateNewMessageBody: (body) => {\n    //   let action = updateNewMessageBodyCreator(body);\n    //   dispatch(action);\n    // },\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageCreator(newMessageBody));\n    },\n  };\n};\n\n// compose(\n//   connect(mapStateToProps, mapDispatchToProps),\n//   withAuthRedirect\n// )(Dialogs);\n\n// const AuthRedirectComponent = withAuthRedirect(Dialogs);\n//\n// const DialogsContainer = connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(AuthRedirectComponent);\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}